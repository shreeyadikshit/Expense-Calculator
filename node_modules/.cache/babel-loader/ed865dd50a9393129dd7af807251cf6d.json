{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreeya.dikshit\\\\Documents\\\\React Learning Projects\\\\Expense Calculator\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExpense(props) {\n  _s();\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const cancelEditingHandler = () => {\n    setIsEditing(false);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: cancelEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewExpense, \"Z6+9Otqb9veB/7P2rbkEU89W8zw=\");\n\n_c = NewExpense;\n;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/shreeya.dikshit/Documents/React Learning Projects/Expense Calculator/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","setIsEditing","isEditing","startEditingHandler","cancelEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAMC,sBAAsB,GAAIC,kBAAD,IAC/B;AACE,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GARD;;AAUA,QAAM,CAACC,SAAD,EAAWD,YAAX,IAA2BZ,QAAQ,CAAC,KAAD,CAAzC;;AACA,QAAMc,mBAAmB,GAAG,MAAM;AAChCF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMG,oBAAoB,GAAG,MAAM;AACjCH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,wBAAQ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEE,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACM,CAACD,SAAD,iBAAe;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrB,EAEMD,SAAS,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAIT,sBAAlC;AAA0D,MAAA,QAAQ,EAAEW;AAApE;AAAA;AAAA;AAAA;AAAA,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA5BQb,U;;KAAAA,U;AA4BR;AAED,eAAeA,UAAf","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm'; \r\nimport './NewExpense.css';\r\n\r\n\r\nfunction NewExpense(props) {\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) =>\r\n  {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  }\r\n  \r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  }\r\n\r\n  const cancelEditingHandler = () => {\r\n    setIsEditing(false);\r\n    return (<button type='button' onClick={startEditingHandler}>Add New Expense</button>);\r\n  }\r\n \r\n  return (\r\n    <div className='new-expense'>\r\n        { !isEditing && (<button type='button' onClick={startEditingHandler}>Add New Expense</button>) }\r\n        { isEditing && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler} onCancel={cancelEditingHandler} /> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}